# ctk_update_manager.py
"""
–ü—Ä–æ—Å—Ç–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä –æ–Ω–æ–≤–ª–µ–Ω—å –¥–ª—è CustomTkinter
–°–ø—Ä–æ—â–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è –±–µ–∑ —Å–∫–ª–∞–¥–Ω–∏—Ö –ø–æ—Ç–æ–∫—ñ–≤
"""

import customtkinter as ctk
import tkinter.messagebox as messagebox
import threading
import time
from updater import AutoUpdater, check_updates


class SimpleUpdateManager:
    """–ü—Ä–æ—Å—Ç–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä –æ–Ω–æ–≤–ª–µ–Ω—å –¥–ª—è CustomTkinter –ø—Ä–æ–≥—Ä–∞–º"""

    def __init__(self, parent_window: ctk.CTk, repo_owner: str, repo_name: str, current_version: str):
        self.parent = parent_window
        self.repo_owner = repo_owner
        self.repo_name = repo_name
        self.current_version = current_version.lstrip('v')

        # –ê–≤—Ç–æ–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –ø—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É
        self.parent.after(5000, self.auto_check_updates)

    def auto_check_updates(self):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω—å —É —Ñ–æ–Ω—ñ"""

        def check_background():
            try:
                update_info = check_updates(self.repo_owner, self.repo_name, self.current_version)
                if update_info and update_info.get('newer', False):
                    # –ü–æ–∫–∞–∑—É—î–º–æ –¥—ñ–∞–ª–æ–≥ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º—É –ø–æ—Ç–æ—Ü—ñ
                    self.parent.after(0, lambda: self.show_update_notification(update_info))
            except Exception as e:
                print(f"[AUTO UPDATE] –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ–ø–µ—Ä–µ–≤—ñ—Ä–∫–∏: {e}")

        threading.Thread(target=check_background, daemon=True).start()

    def check_updates_manual(self):
        """–†—É—á–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω—å –∑ –ø—Ä–æ—Å—Ç–∏–º –¥—ñ–∞–ª–æ–≥–æ–º"""
        # –ü—Ä–æ—Å—Ç–∏–π –¥—ñ–∞–ª–æ–≥ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
        check_dialog = ctk.CTkToplevel(self.parent)
        check_dialog.title("–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω—å")
        check_dialog.geometry("300x150")
        check_dialog.resizable(False, False)
        check_dialog.transient(self.parent)
        check_dialog.grab_set()

        # –¶–µ–Ω—Ç—Ä—É–≤–∞–Ω–Ω—è
        self._center_window(check_dialog, 300, 150)

        # –ö–æ–Ω—Ç–µ–Ω—Ç
        status_label = ctk.CTkLabel(check_dialog, text="üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω—å...",
                                    font=ctk.CTkFont(size=16))
        status_label.pack(pady=30)

        progress = ctk.CTkProgressBar(check_dialog, mode="indeterminate")
        progress.pack(pady=10, padx=30, fill="x")
        progress.start()

        cancel_btn = ctk.CTkButton(check_dialog, text="–°–∫–∞—Å—É–≤–∞—Ç–∏", width=100,
                                   command=check_dialog.destroy)
        cancel_btn.pack(pady=10)

        def check_thread():
            try:
                time.sleep(1)  # –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è UX
                update_info = check_updates(self.repo_owner, self.repo_name, self.current_version)

                # –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –¥—ñ–∞–ª–æ–≥ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
                self.parent.after(0, check_dialog.destroy)

                # –ü–æ–∫–∞–∑—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                if update_info and update_info.get('newer', False):
                    self.parent.after(0, lambda: self.show_update_notification(update_info))
                else:
                    self.parent.after(0, self.show_no_updates)

            except Exception as e:
                self.parent.after(0, check_dialog.destroy)
                self.parent.after(0, lambda: self.show_error(f"–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏: {str(e)}"))

        threading.Thread(target=check_thread, daemon=True).start()

    def show_update_notification(self, update_info: dict):
        """–ü–æ–∫–∞–∑—É—î —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –¥–æ—Å—Ç—É–ø–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è"""
        # –°—Ç–≤–æ—Ä—é—î–º–æ –¥—ñ–∞–ª–æ–≥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        update_dialog = ctk.CTkToplevel(self.parent)
        update_dialog.title("üöÄ –î–æ—Å—Ç—É–ø–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è")
        update_dialog.geometry("450x350")
        update_dialog.resizable(False, False)
        update_dialog.transient(self.parent)
        update_dialog.grab_set()

        self._center_window(update_dialog, 450, 350)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = ctk.CTkLabel(update_dialog, text="üöÄ –ù–æ–≤–∞ –≤–µ—Ä—Å—ñ—è –¥–æ—Å—Ç—É–ø–Ω–∞!",
                             font=ctk.CTkFont(size=20, weight="bold"))
        title.pack(pady=20)

        # –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≤–µ—Ä—Å—ñ—ó
        info_frame = ctk.CTkFrame(update_dialog)
        info_frame.pack(pady=15, padx=20, fill="x")

        current_lbl = ctk.CTkLabel(info_frame, text=f"üì¶ –ü–æ—Ç–æ—á–Ω–∞: v{self.current_version}",
                                   font=ctk.CTkFont(size=14))
        current_lbl.pack(pady=5)

        new_lbl = ctk.CTkLabel(info_frame, text=f"üîÑ –ù–æ–≤–∞: v{update_info['version']}",
                               font=ctk.CTkFont(size=14, weight="bold"),
                               text_color="green")
        new_lbl.pack(pady=5)

        # –ü—Ä–∏–º—ñ—Ç–∫–∏ —Ä–µ–ª—ñ–∑—É
        notes_lbl = ctk.CTkLabel(update_dialog, text="üìù –©–æ –Ω–æ–≤–æ–≥–æ:",
                                 font=ctk.CTkFont(size=14, weight="bold"))
        notes_lbl.pack(pady=(15, 5))

        notes_text = ctk.CTkTextbox(update_dialog, height=100, width=400)
        notes_text.pack(pady=5, padx=20)

        release_notes = update_info.get('release_notes', '–ù–µ–º–∞—î –æ–ø–∏—Å—É')
        if len(release_notes) > 400:
            release_notes = release_notes[:400] + "..."
        notes_text.insert("1.0", release_notes)
        notes_text.configure(state="disabled")

        # –ö–Ω–æ–ø–∫–∏
        btn_frame = ctk.CTkFrame(update_dialog)
        btn_frame.pack(pady=20, padx=20, fill="x")

        update_btn = ctk.CTkButton(btn_frame, text="üîÑ –û–Ω–æ–≤–∏—Ç–∏ –∑–∞—Ä–∞–∑",
                                   command=lambda: self.start_update(update_dialog),
                                   width=150, font=ctk.CTkFont(size=14, weight="bold"))
        update_btn.pack(side="left", padx=10)

        cancel_btn = ctk.CTkButton(btn_frame, text="‚ùå –ü—ñ–∑–Ω—ñ—à–µ",
                                   command=update_dialog.destroy, width=150,
                                   fg_color="gray", hover_color="darkgray")
        cancel_btn.pack(side="right", padx=10)

    def start_update(self, notification_dialog):
        """–ó–∞–ø—É—Å–∫–∞—î –ø—Ä–æ—Ü–µ—Å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è"""
        notification_dialog.destroy()

        # –°—Ç–≤–æ—Ä—é—î–º–æ –≤—ñ–∫–Ω–æ –ø—Ä–æ–≥—Ä–µ—Å—É
        progress_dialog = ctk.CTkToplevel(self.parent)
        progress_dialog.title("–û–Ω–æ–≤–ª–µ–Ω–Ω—è SportForAll")
        progress_dialog.geometry("400x250")
        progress_dialog.resizable(False, False)
        progress_dialog.transient(self.parent)
        progress_dialog.grab_set()

        self._center_window(progress_dialog, 400, 250)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = ctk.CTkLabel(progress_dialog, text="üöÄ –û–Ω–æ–≤–ª–µ–Ω–Ω—è SportForAll",
                             font=ctk.CTkFont(size=18, weight="bold"))
        title.pack(pady=20)

        # –°—Ç–∞—Ç—É—Å
        status_label = ctk.CTkLabel(progress_dialog, text="–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞...",
                                    font=ctk.CTkFont(size=14))
        status_label.pack(pady=10)

        # –ü—Ä–æ–≥—Ä–µ—Å –±–∞—Ä
        progress_bar = ctk.CTkProgressBar(progress_dialog, width=350)
        progress_bar.pack(pady=15, padx=25)
        progress_bar.set(0)

        # –í—ñ–¥—Å–æ—Ç–∫–∏
        percent_label = ctk.CTkLabel(progress_dialog, text="0%")
        percent_label.pack(pady=5)

        # –õ–æ–≥
        log_frame = ctk.CTkFrame(progress_dialog)
        log_frame.pack(pady=10, padx=20, fill="both", expand=True)

        log_text = ctk.CTkTextbox(log_frame, height=60, font=ctk.CTkFont(size=10))
        log_text.pack(pady=10, padx=10, fill="both", expand=True)

        def add_log(message):
            def update_gui():
                if progress_dialog.winfo_exists():
                    log_text.insert("end", f"{message}\n")
                    log_text.see("end")
                    progress_dialog.update_idletasks()

            self.parent.after(0, update_gui)

        def update_progress(percent, status):
            def update_gui():
                if progress_dialog.winfo_exists():
                    status_label.configure(text=status)
                    progress_bar.set(percent / 100.0)
                    percent_label.configure(text=f"{percent:.1f}%")
                    progress_dialog.update_idletasks()

            self.parent.after(0, update_gui)

        def update_thread():
            try:
                add_log("–ü–æ—á–∞—Ç–æ–∫ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è...")
                updater = AutoUpdater(self.repo_owner, self.repo_name, self.current_version)

                result = updater.perform_full_update(update_progress)

                # –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                self.parent.after(0, lambda: self.handle_update_result(result, progress_dialog))

            except Exception as e:
                error_msg = f"–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {str(e)}"
                add_log(error_msg)
                self.parent.after(0, lambda: self.handle_update_error(error_msg, progress_dialog))

        add_log("–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è...")
        threading.Thread(target=update_thread, daemon=True).start()

    def handle_update_result(self, result: dict, progress_dialog):
        """–û–±—Ä–æ–±–ª—è—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è"""
        progress_dialog.destroy()

        if result['success']:
            messagebox.showinfo(
                "‚úÖ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ",
                f"–û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ –≤–µ—Ä—Å—ñ—ó {result['version']} –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!\n\n"
                "üîÑ –ü—Ä–æ–≥—Ä–∞–º–∞ –∑–∞—Ä–∞–∑ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è –¥–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω.",
                parent=self.parent
            )
            # –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –ø—Ä–æ–≥—Ä–∞–º—É –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É
            self.parent.quit()
        else:
            if result.get('no_update'):
                messagebox.showinfo("‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è", result['message'], parent=self.parent)
            else:
                error_msg = result.get('error', '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞')
                messagebox.showerror(
                    "‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è",
                    f"–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—É:\n\n{error_msg}\n\n"
                    "üí° –°–ø—Ä–æ–±—É–π—Ç–µ:\n"
                    "‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—É —è–∫ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä\n"
                    "‚Ä¢ –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∞–Ω—Ç–∏–≤—ñ—Ä—É—Å\n"
                    "‚Ä¢ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –≤—Ä—É—á–Ω—É –∑ GitHub",
                    parent=self.parent
                )

    def handle_update_error(self, error_msg: str, progress_dialog):
        """–û–±—Ä–æ–±–ª—è—î –ø–æ–º–∏–ª–∫—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è"""
        progress_dialog.destroy()
        messagebox.showerror(
            "‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞",
            f"–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ:\n\n{error_msg}",
            parent=self.parent
        )

    def show_no_updates(self):
        """–ü–æ–∫–∞–∑—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —â–æ –æ–Ω–æ–≤–ª–µ–Ω—å –Ω–µ–º–∞—î"""
        messagebox.showinfo(
            "‚úÖ –ê–∫—Ç—É–∞–ª—å–Ω–∞ –≤–µ—Ä—Å—ñ—è",
            f"–£ –≤–∞—Å –æ—Å—Ç–∞–Ω–Ω—è –≤–µ—Ä—Å—ñ—è –ø—Ä–æ–≥—Ä–∞–º–∏!\n\nüì¶ –í–µ—Ä—Å—ñ—è: v{self.current_version}",
            parent=self.parent
        )

    def show_error(self, error_msg: str):
        """–ü–æ–∫–∞–∑—É—î –ø–æ–º–∏–ª–∫—É"""
        messagebox.showerror(
            "‚ùå –ü–æ–º–∏–ª–∫–∞",
            f"–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:\n\n{error_msg}\n\n"
            "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º.",
            parent=self.parent
        )

    def _center_window(self, window, width, height):
        """–¶–µ–Ω—Ç—Ä—É—î –≤—ñ–∫–Ω–æ –Ω–∞ –µ–∫—Ä–∞–Ω—ñ"""
        window.update_idletasks()
        screen_width = window.winfo_screenwidth()
        screen_height = window.winfo_screenheight()

        x = (screen_width - width) // 2
        y = (screen_height - height) // 2

        window.geometry(f"{width}x{height}+{x}+{y}")


# –ü—Ä–æ—Å—Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω—å
def setup_auto_updates(main_window: ctk.CTk, current_version: str) -> SimpleUpdateManager:
    """
    –ü—Ä–æ—Å—Ç–∏–π —Å–ø–æ—Å—ñ–± –¥–æ–¥–∞—Ç–∏ –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ SportForAll

    –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
    from ctk_update_manager import setup_auto_updates

    update_manager = setup_auto_updates(main_window, "2.16.4")

    # –î–ª—è —Ä—É—á–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–æ–¥–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É:
    # check_btn = ctk.CTkButton(main_window, text="–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è",
    #                          command=update_manager.check_updates_manual)
    """
    return SimpleUpdateManager(
        main_window,
        "KostyaBulavko",  # —Ç–≤–æ—î GitHub —ñ–º'—è
        "sportfprall",  # –Ω–∞–∑–≤–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é
        current_version
    )


# –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
if __name__ == "__main__":
    # –¢–µ—Å—Ç GUI
    ctk.set_appearance_mode("dark")
    ctk.set_default_color_theme("blue")

    root = ctk.CTk()
    root.title("–¢–µ—Å—Ç –æ–Ω–æ–≤–ª–µ–Ω—å")
    root.geometry("300x200")

    update_manager = setup_auto_updates(root, "2.16.3")

    # btn = ctk.CTkButton(root, text="–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è",
    #                     command=update_manager.check_updates_manual)
    # btn.pack(pady=50)

    root.mainloop()